generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map(name: "accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?   @db.Text
  email         String?   @unique
  emailVerified DateTime?
  image         String?   @db.Text
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts  Account[]
  sessions  Session[]
  adresses  Address[]
  purchases Purchase[]

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("sessions")
}

model Address {
  city       String
  client     String  @unique
  complement String?
  district   String
  fone       String
  id         String  @id @default(cuid())
  number     String
  state      String
  street     String
  type       String
  userId     String
  zip        String

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("addresses")
}

model Purchase {
  amount_total_checkout Int?
  checkout_id           String   @unique
  created_at            DateTime @default(now())
  email                 String?
  id                    String   @id @default(cuid())
  name                  String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@index([userId])
  @@map("purchases")
}
